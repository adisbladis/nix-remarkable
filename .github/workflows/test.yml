name: 'nix-remarkable'
on:
  pull_request:
  push:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.1
    - uses: cachix/install-nix-action@v11
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v6
      with:
        name: nix-remarkable
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - run: nix build --arg release true -f . rmPkgs.linuxPackages.mxc_epdc_fb_damage
    - name: "Copy linuxPackages.mxc_epdc_fb_damage"
      run: "mkdir mxc_epdc_fb_damage && cp -r result/* mxc_epdc_fb_damage && chmod +w -R mxc_epdc_fb_damage"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: mxc_epdc_fb_damage
        path: mxc_epdc_fb_damage
    - run: nix build --arg release true -f . rmPkgs.rM-vnc-server
    - name: "Copy rmPkgs.rM-vnc-server"
      run: "mkdir rM-vnc-server && cp -r result/* rM-vnc-server && chmod +w -R rM-vnc-server && chmod +x -R rM-vnc-server"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: rM-vnc-server
        path: rM-vnc-server
    - run: nix build --arg release true -f . hostPkgs.gst-libvncclient-rfbsrc
    - name: "Copy hostPkgs.gst-libvncclient-rfbsrc"
      run: "mkdir gst-libvncclient-rfbsrc && cp -r result/* gst-libvncclient-rfbsrc && chmod +w -R gst-libvncclient-rfbsrc && chmod +x -R gst-libvncclient-rfbsrc"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: gst-libvncclient-rfbsrc
        path: gst-libvncclient-rfbsrc
    - run: nix build --arg release true -f . rmPkgs.remarkable_news
    - name: "Copy rmPkgs.remarkable_news"
      run: "mkdir remarkable_news && cp -r result/* remarkable_news && chmod +w -R remarkable_news && chmod +x -R remarkable_news"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: remarkable_news
        path: remarkable_news
    - run: nix build --arg release true -f . rmPkgs.chessmarkable
    - name: "Copy rmPkgs.chessmarkable"
      run: "mkdir chessmarkable && cp -r result/* chessmarkable && chmod +w -R chessmarkable && chmod +x -R chessmarkable"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: chessmarkable
        path: chessmarkable
    - run: nix build --arg release true -f . rmPkgs.retris
    - name: "Copy rmPkgs.retris"
      run: "mkdir retris && cp -r result/* retris && chmod +w -R retris && chmod +x -R retris"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: retris
        path: retris
    - run: nix build --arg release true -f . rmPkgs.plato
    - name: "Copy rmPkgs.plato"
      run: "mkdir plato && cp -r result/* plato && chmod +w -R plato && chmod +x -R plato"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: plato
        path: plato
    - run: nix build --arg release true -f . rmPkgs.appmarkable
    - name: "Copy rmPkgs.appmarkable"
      run: "mkdir appmarkable && cp -r result/* appmarkable && chmod +w -R appmarkable && chmod +x -R appmarkable"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: appmarkable
        path: appmarkable
    - run: nix build --arg release true -f . rmPkgs.rm-video-player
    - name: "Copy rmPkgs.rm-video-player"
      run: "mkdir rm-video-player && cp -r result/* rm-video-player && chmod +w -R rm-video-player && chmod +x -R rm-video-player"
    - name: "Upload artifact to github"
      uses: actions/upload-artifact@v2
      with:
        name: rm-video-player
        path: rm-video-player
